<?xml version="1.0"?>
<ruleset name="RawPHP">
	<description>RawPHP Coding Standard</description>
	
        <!-- No coding standards for the following directories -->
	<exclude-pattern>*/assets/*</exclude-pattern>
	<exclude-pattern>*/data/*</exclude-pattern>
	<exclude-pattern>*/vendors/*</exclude-pattern>
	<exclude-pattern>*/views/*</exclude-pattern>
	
                <!-- Include Generic sniffs -->
	<rule ref="Generic.Classes.DuplicateClassName"/>
	<rule ref="Generic.CodeAnalysis.EmptyStatement"/>
	<rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
	<rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
	<rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
	<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
	<rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
	<!--<rule ref="Generic.Commenting.Fixme"/>-->
	<rule ref="Generic.Commenting.Todo"/>
	<rule ref="Generic.Files.ByteOrderMark"/>
	<!--<rule ref="Generic.Files.EndFileNoNewLine"/>-->
	<rule ref="Generic.Files.LineEndings"/>
        <rule ref="Generic.Files.LineLength">
            <properties>
                <property name="lineLimit" value="100"/>
                <property name="absoluteLineLimit" value="120"/>
            </properties>
        </rule>
	<!--<rule ref="Generic.Files.OneClassPerFile"/>-->
	<!--<rule ref="Generic.Files.OneInterfacePerFile"/>-->
	<rule ref="Generic.Formatting.DisallowMultipleStatements"/>
	<rule ref="Generic.Formatting.NoSpaceAfterCast"/>
	<rule ref="Generic.Functions.CallTimePassByReference"/>
	<rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
	<rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>
        <rule ref="Generic.Metrics.CyclomaticComplexity">
            <properties>
                <property name="complexity" value="20"/>
                <property name="absoluteComplexity" value="50"/>
            </properties>
        </rule>
	<rule ref="Generic.Metrics.NestingLevel"/>
	<rule ref="Generic.NamingConventions.ConstructorName"/>
	<rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
	<!--<rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>-->
	<rule ref="Generic.PHP.DisallowShortOpenTag"/>
	<rule ref="Generic.PHP.DeprecatedFunctions"/>
	<rule ref="Generic.PHP.ForbiddenFunctions"/>
	<!--<rule ref="Generic.PHP.LowerCaseKeyword"/>-->
	<!--<rule ref="Generic.PHP.SAPIUsage"/>-->
	<rule ref="Generic.PHP.UpperCaseConstant"/>
	<rule ref="Generic.Strings.UnnecessaryStringConcat"/>
	<rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
	<rule ref="Generic.WhiteSpace.ScopeIndent"/>
	
		<!-- Include PEAR sniffs -->
	<rule ref="PEAR.NamingConventions.ValidClassName"/>
	<rule ref="PEAR.NamingConventions.ValidFunctionName"/>
	<rule ref="PEAR.Commenting.ClassComment"/>
	<rule ref="PEAR.Commenting.FileComment"/>
	<rule ref="PEAR.Commenting.InlineComment"/>
	<rule ref="PEAR.Files.IncludingFile"/>
	<rule ref="PEAR.Functions.ValidDefaultValue"/>
	<rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>
	<rule ref="PEAR.WhiteSpace.ScopeClosingBrace"/>
	<rule ref="PEAR.Classes.ClassDeclaration"/>
	
                <!-- Include PSR2 sniffs -->
	<!--<rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>-->
	
		<!-- Include Zend sniffs -->
	<rule ref="Zend.Files.ClosingTag"/>
	<rule ref="Zend.Debug.CodeAnalyzer"/>
	
                <!-- Include Yii sniffs -->
	<!--<rule ref="Yii.Files.Utf8Encoding"/>-->
	<!--<rule ref="Yii.Objects.ObjectParentheses"/>-->
	
		<!-- Include Squiz sniffs -->
	<rule ref="Squiz.Classes.ClassFileName"/>
	<rule ref="Squiz.Classes.ValidClassName"/>
	<rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
	
	<rule ref="Squiz.Classes.ValidClassName.NotCamelCaps">
		<message>%s name "%s" is not in StudlyCaps format</message>
	</rule>
	
</ruleset>